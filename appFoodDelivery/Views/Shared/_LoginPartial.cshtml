@using Microsoft.AspNetCore.Identity
@inject SignInManager<appFoodDelivery.Entity.ApplicationUser> SignInManager
@inject UserManager<appFoodDelivery.Entity.ApplicationUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                <a class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
            </li>
            <li class="nav-item">
                @*<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-primary">Logout</button>
        </form>*@
                <form class="form-inline" asp-action="logout" asp-controller="Account">
                    <button type="submit" class="nav-link btn btn-link text-primary">Logout</button>
                </form>
            </li>
        } 
        else
        {
            @*<li class="nav-item">
                <a class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>*@
            <li class="nav-item">
                <a class="nav-link text-primary" asp-action="Register" asp-controller="Account">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-primary" asp-action="Login" asp-controller="Account">Login</a>
            </li> 
        }
    </ul>
